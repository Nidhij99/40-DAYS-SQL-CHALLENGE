CREATE DATABASE tredence;
use tredence;

CREATE TABLE cinema (
    seat_id INT PRIMARY KEY,
    free int
);
delete from cinema;
INSERT INTO cinema (seat_id, free) VALUES (1, 1);
INSERT INTO cinema (seat_id, free) VALUES (2, 0);
INSERT INTO cinema (seat_id, free) VALUES (3, 1);
INSERT INTO cinema (seat_id, free) VALUES (4, 1);
INSERT INTO cinema (seat_id, free) VALUES (5, 1);
INSERT INTO cinema (seat_id, free) VALUES (6, 0);
INSERT INTO cinema (seat_id, free) VALUES (7, 1);
INSERT INTO cinema (seat_id, free) VALUES (8, 1);
INSERT INTO cinema (seat_id, free) VALUES (9, 0);
INSERT INTO cinema (seat_id, free) VALUES (10, 1);
INSERT INTO cinema (seat_id, free) VALUES (11, 0);
INSERT INTO cinema (seat_id, free) VALUES (12, 1);
INSERT INTO cinema (seat_id, free) VALUES (13, 0);
INSERT INTO cinema (seat_id, free) VALUES (14, 1);
INSERT INTO cinema (seat_id, free) VALUES (15, 1);
INSERT INTO cinema (seat_id, free) VALUES (16, 0);
INSERT INTO cinema (seat_id, free) VALUES (17, 1);
INSERT INTO cinema (seat_id, free) VALUES (18, 1);
INSERT INTO cinema (seat_id, free) VALUES (19, 1);
INSERT INTO cinema (seat_id, free) VALUES (20, 1);

-- Q1. Query all the consecutive available seats order by the seat_id ? 

with cte as(
Select c1.seat_id as s1,c2.seat_id as s2 from cinema as c1
join cinema as c2
on c1.seat_id + 1 = c2.seat_id
where c1.free =1 and c2.free =1
ORDER BY c1.seat_id ASC)
select s1 from cte 
union                                  -- union is used so that we dont get duplicate data but this query doesnt give the value in proper order
select s2 from cte 
;

-- method 2 

select * from (select * , lag(free,1) over(order by seat_id) as prev_free , 
lead(free,1) over(order by seat_id) as next_free 
from cinema) a         -- this query also doesnt give the value in proper order. 
where free =1 and ( prev_free=1 or next_free=1);
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ 
